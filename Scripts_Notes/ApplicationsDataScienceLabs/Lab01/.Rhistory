install.packages(c("ggplot2", "dplyr", "gridExtra"))
library(ggplot2)
library(dplyr)
library(gridExtra)
library(ggplot2)
source('E:/ML Labs/Mod4/LoadAutos.R')
auto.price <- read.auto(path = 'PATH-TO-YOUR-LAB-FILES')
auto.price <- read.auto()
str(auto.price)
source('E:/ML Labs/Mod4/ExploreAutos.R')
pairs(~ ., data = auto.price[, num.cols])
lapply(plot.cols2, auto.hist)
lapply(plot.cols2, auto.box)
lapply(plot.cols3, scatter.auto)
source('E:/ML Labs/Mod4/ExploreAutos.R')
factor
lapply(plot.cols3, scatter.auto)
source('E:/ML Labs/Mod4/ExploreAutos.R')
lapply(plot.cols3, scatter.auto.cond)
source('E:/ML Labs/Mod4/ExploreIncome.R')
feature.names <- name.list(Income)
lapply(feature.names, bar.income)
feature.names <- name.list(Income)
Income <- read.income()
feature.names <- name.list(Income)
lapply(feature.names, bar.income)
lapply(feature.names, box.income)
y <- c(35,34,38,35,37)
n <- length(y)
estimate <- mean(y)
se <- sd(y)/sqrt(n)
int.50 <- estimate + qt(c(.25,.75),n-1)*se
int.95 <- estimate + qt(c(.025,.975),n-1)*se
rm(list=ls())
getwd
getwd()
setwd("C:\Users\Confiz-128\Desktop\BI\Forecasting Labs\DAT203.3x\Lab01")
setwd(@"C:\Users\Confiz-128\Desktop\BI\Forecasting Labs\DAT203.3x\Lab01")
setwd("C:/Users/Confiz-128/Desktop/BI/Forecasting Labs/DAT203.3x/Lab01")
df <- read.table("cadairydata.csv",
header = FALSE,
sep = ",")
df <- read.table("cadairydata.csv",
header = TRUE,
sep = ",")
source('~/.active-rstudio-document')
to.POSIXct(df$Year, df$Month.Number)
df
df$Date <- to.POSIXct(df$Year, df$Month.Number)
df(head)
head(df)
source('~/.active-rstudio-document')
dropCols <- c("X","Year.Month", "Month.Number")
df$Month <- order.month(df$Month)
df[ , !(names(df) %in% dropCols)]
source('~/.active-rstudio-document')
cls
clear
head(df)
source('~/.active-rstudio-document')
dairy.plot(df)
dairy.acf(dairy, col = 'Milk.Prod')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
dairy.acf(dairy, col = 'Milk.Prod')
dairy.acf(df, col = 'Milk.Prod')
drcol2 <- c("Date")
dairy.plot(df,col = "Icecream.Prod")
dairy.acf(dairy, col = "Icecream.Prod")
dairy.acf(df, col = "Icecream.Prod")
dairy.acf(df, col = 'Milk.Prod')
source('~/.active-rstudio-document')
decomp <- decomp.dairy(df, order = 12)
decomp <- decomp.dairy(df, order = 12)
decomp.plot(decomp)\
decomp.plot(decomp)
dairy.acf(decomp)
source('~/.active-rstudio-document')
dairyMult = dairy.decomp(df, col = 'Milk.Prod', span = 0.2)
dairy.acf(dairyMult)
hist.ts(dairyMult, col = 'remainder')
source('~/.active-rstudio-document')
hist.ts(dairyMult, col = 'remainder')
source('~/.active-rstudio-document')
ma1 = model.dairy(dairyMult, order = c(0,0,3))
dairy.acf(ma1$resid[-1], is.df = FALSE)
entry <- read.csv(entrytest)
entry <- read.csv(entrytest.csv)
wd
getwd()
entry <- read.csv("entrytest.csv")
head(entry)
entry$Date <- to.POSIXct(entry$Year,  entry$Month.1)
head(entry)
entry <- read.csv("entrytest.csv")
entry$Date <- to.POSIXct(entry$Year,  entry$Month.1)
head(entry)
order.month(entry$Month.Name)
head(entry)
dairy.plot(col="entry.test")
dairy.plot(entry,col="entry.test")
entry2 <- read.csv("entrytest2.csv")
entry2$Date <- to.POSIXct(entry2$Year,  entry2$Month.1)
order.month(entry2$Month.Name)
head(entry2)
source('~/.active-rstudio-document')
compare.plot(entry,col = 'entry.test', entry2, col2 = 'entry.test')
source('~/.active-rstudio-document')
compare.plot(entry,col = 'entry.test', entry2, col2 = 'entry.test')
source('~/.active-rstudio-document')
compare.plot(entry,col = 'entry.test', entry2, col2 = 'entry.test')
dairy.acf(entry2, col = 'entry.test')
hist.ts(entry2)
hist.ts(entry2, col = "entry,test")
hist.ts(entry2)
hist.ts(entry2)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
hist.ts(entry2,col = "entry.test")
decompentry <- decomp.dairy(entry2, order = 12)
source('~/.active-rstudio-document')
decompentry <- decomp.dairy(entry2, order = 12)
source('~/.active-rstudio-document')
decompentry <- decomp.dairy(entry2, order = 12)
source('~/.active-rstudio-document')
decompentry <- decomp.dairy(entry2, order = 12)
source('~/.active-rstudio-document')
decompentry <- decomp.dairy(entry2, order = 12)
entrytrend <- decomp.dairy(entry2, order = 12)
dairy.plot(entrytrend,col = "trend")
temp <- ts(log(entry2[, 'entry.test']), frequency=12, start=2004)
install.packages("forecast")
library(forecast)
fit.dairy = auto.arima(temp, max.p=3, max.q=3,
max.P=2, max.Q=2, max.order=5, max.d=2, max.D=1,
start.p=0, start.q=0, start.P=0, start.Q=0)
summary(fit.dairy)
dairy.ma(entry2,col = "entry.test")
decompentry <- decomp.dairy(entry2, order = 12)
source('~/.active-rstudio-document')
decompentry <- decomp.dairy(entry2, order = 12)
source('~/.active-rstudio-document')
decompentry <- decomp.dairy(entry2, order = 12)
class(entry2$entry.test)
head(entry2)
dairy.seasons(entry2)
source('~/.active-rstudio-document')
decompentry <- decomp.dairy(entry2, order = 12)
debugSource('C:/Users/Confiz-128/Desktop/BI/Forecasting Labs/DAT203.3x/Lab01/abc.R')
decompentry <- decomp.dairy(entry2, order = 12)
decompentry <- decomp.dairy(entry2, order = 12)
head(df)
decompentry <- decomp.dairy(entry2, order = 12)
head(temp)
debugSource('C:/Users/Confiz-128/Desktop/BI/Forecasting Labs/DAT203.3x/Lab01/abc.R')
decompentry <- decomp.dairy(entry2, order = 12)
head(temp)
head(trend)
decompentry <- decomp.dairy(entry2, multiplicative = FALSE order = 12)
decompentry <- decomp.dairy(entry2, multiplicative = FALSE, order = 12)
head(temp)
head(trend)
decompentry <- decomp.dairy(entry2, multiplicative = FALSE, order = 12)
decomp.plot(decompentry)
install.packages("gridExtra")
decomp.plot(decompentry)
head(decompentry)
decompentry <- decomp.dairy(entry2, multiplicative = FALSE, order = 12)
decomp.plot(decompentry)
install.packages("gridExtra")
decomp.plot(decompentry)
source('C:/Users/Confiz-128/Desktop/BI/Forecasting Labs/DAT203.3x/Lab01/abc.R')
decompentry <- decomp.dairy(entry2, multiplicative = FALSE, order = 12)
head(decompentry)
decomp.plot(decompentry)
install.packages("gridExtra")
decomp.plot(decompentry)
dairyMult = dairy.decomp(entry2, col = 'entry.test', span = 0.2)
dairyMult = dairy.decomp(entry2, col = 'entry.test', span = 0.2, Mult = FALSE)
head(dairyMult)
dairy.acf(dairyMult)
hist.ts(dairyMult, col = 'remainder')
source('C:/Users/Confiz-128/Desktop/BI/Forecasting Labs/DAT203.3x/Lab01/abc.R')
dairy.box(dairyMult)
source('C:/Users/Confiz-128/Desktop/BI/Forecasting Labs/DAT203.3x/Lab01/abc.R')
dairy.box(dairyMult)
source('C:/Users/Confiz-128/Desktop/BI/Forecasting Labs/DAT203.3x/Lab01/abc.R')
ma1 = model.dairy(dairyMult, order = c(0,0,3))
dairy.acf(dairyMult)
dairy.acf(dairyMult, col = "entry.test")
ma1 = model.dairy(dairyMult, order = c(0,0,1))
ma1 = model.dairy(dairyMult, order = c(0,0,2))
ma1 = model.dairy(dairyMult, order = c(0,0,3))
ma1 = model.dairy(dairyMult, order = c(0,0,4))
ma1 = model.dairy(dairyMult, order = c(0,0,5))
ma1 = model.dairy(dairyMult, order = c(1,0,5))
ma1 = model.dairy(dairyMult, order = c(2,0,3))
ma1 = model.dairy(dairyMult, order = c(3,0,3))
ma1 = model.dairy(dairyMult, order = c(2,0,3))
ma1 = model.dairy(dairyMult, order = c(0,0,7))
ma1 = model.dairy(dairyMult, order = c(0,0,5))
dairy.acf(ma1$resid[-1], is.df = FALSE)
dairyDiff <- dairy.diff(entry2)
source('C:/Users/Confiz-128/Desktop/BI/Forecasting Labs/DAT203.3x/Lab01/abc.R')
dairyDiff <- dairy.diff(entry2)
dairyDiff = dairy.decomp(dairyDiff, col = 'entry.test', span = 0.5, Mult = FALSE)
temp <- ts(dairy[, 'entry.test'], frequency=12, start=2004)
temp <- ts(entry2[, 'entry.test'], frequency=12, start=2004)
install.packages("forecast")
library(forecast)
fit.dairy = auto.arima(temp, max.p=3, max.q=3,
max.P=2, max.Q=2, max.order=5, max.d=2, max.D=1,
start.p=0, start.q=0, start.P=0, start.Q=0)
summary(fit.dairy)
dairy.fit = forecast(fit.dairy, h=24)
summary(dairy.fit)
head(dairy.fit)
plot(dairy.fit)
class(dairy.fit)
for <- dairy.fit(,"forcast")
dairy.fit$lower[,2]
forcastedData <- entry2(,"Date","entry.test")
forcastedData <- entry2[],"Date","entry.test"]
forcastedData <- entry2[,"Date","entry.test"]
forc$date <- entry2$Date
dairy.fit$mean
mean <- dairy.fit$mean
head(mean())
head(mean
head(mean)
class(mean
)
class(entry$entry.test)
entry[entry$dateTime > '2014-12-01',]
entry[entry$Date > '2014-12-01',]
ForecastDates <- entry[entry$Date > '2014-12-01',]$Date
ForcastActualValues <- entry[entry$Date > '2014-12-01',]$entry.test
ForcastPredictedValues <- as.numeric(dairy.fit$mean)
ForcastUpper <- dairy.fit$upper[,2]
ForcastLower <- dairy.fit$lower[,2]
ForcastActualValues <- ForcastActualValues[2:25]
ForcastActualValues
ForcastPredictedValues
Result <-= data.frame(ForecastDates, ForcastActualValues,ForcastPredictedValues, ForcastUpper, ForcastLower)
Result <- data.frame(ForecastDates, ForcastActualValues,ForcastPredictedValues, ForcastUpper, ForcastLower)
length(ForecastDates)
ForecastDates
ForecastDates <- ForecastDates[2:25]
Result <- data.frame(ForecastDates, ForcastActualValues,ForcastPredictedValues, ForcastUpper, ForcastLower)
source('C:/Users/Confiz-128/Desktop/BI/Forecasting Labs/DAT203.3x/Lab01/abc.R')
result.plot(ForecastDates)
source('C:/Users/Confiz-128/Desktop/BI/Forecasting Labs/DAT203.3x/Lab01/abc.R')
result.plot(ForecastDates)
source('C:/Users/Confiz-128/Desktop/BI/Forecasting Labs/DAT203.3x/Lab01/abc.R')
result.plot(ForecastDates)
class(entry$entry.test)
class(Result$ForecastDates)
class(Result$ForcastActualValues)
class(Result$ForcastPredictedValues)
class(Result$ForcastUpper)
dairy.plot(Result,col = "ForcastPredictedValues")
result.plot(Result)
source('C:/Users/Confiz-128/Desktop/BI/Forecasting Labs/DAT203.3x/Lab01/abc.R')
result.plot(Result)
source('C:/Users/Confiz-128/Desktop/BI/Forecasting Labs/DAT203.3x/Lab01/abc.R')
result.plot(Result)
source('C:/Users/Confiz-128/Desktop/BI/Forecasting Labs/DAT203.3x/Lab01/abc.R')
result.plot(Result)
source('C:/Users/Confiz-128/Desktop/BI/Forecasting Labs/DAT203.3x/Lab01/abc.R')
result.plot(Result)
source('C:/Users/Confiz-128/Desktop/BI/Forecasting Labs/DAT203.3x/Lab01/abc.R')
result.plot(Result)
dairy.plot(entry,col = "entry.test")
num.cols <- c("wheel.base",
"width",
"height",
"curb.weight",
"engine.size",
"bore",
"compression.ratio",
"city.mpg",
"price",
"lnprice")
to.POSIXct <- function(year, monthNumber){
## Function to create a POSIXct time series
## object from a year.month format
## Create a character vector from the numeric input
dateStr <- paste(as.character(year), "-",
as.character(monthNumber), "-",
"01", sep = "")
## Return the POSIXct time series object
as.POSIXct( strptime(dateStr, "%Y-%m-%d"))
}
y <- c(35,34,38,35,37)
dataset1 <- loan.data
read.data <- function(path = 'E:/Cortana Competition'){
## Read the csv file
filePath <- file.path(path, 'Loan Granting Binary Classification.csv')
loan.data <- read.csv(filePath, header = TRUE,
stringsAsFactors = FALSE)
}
